-- CREATE DATABASE "aventurier";

BEGIN;
-- Creates a transaction group of SQL commands, if any fails, whole transaction is invalidated

DROP TABLE IF EXISTS 
"deck",
"card",
"city",
"route",
"type",
"color",
"mission",
"user",
"player",
"game",
"claimed_city",
"claimed_route",
"claimed_mission";


CREATE TABLE IF NOT EXISTS "claimed_city" ( -- through table : city 0N:0N game
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "game_id" integer NOT NULL, -- link to game table
  "city_id" integer NOT NULL, -- link to city table
  "player_id" integer NOT NULL,-- link to player table : claimed_city 11:0N player
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "claimed_route"( -- through table : route 0N:0N game
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "game_id" integer NOT NULL,-- link to game table
  "route_id" integer NOT NULL,-- link to route table
  "player_id" integer NOT NULL,-- link to player table : claimed_route 11:0N player
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "claimed_mission"( -- through table : mission 0N:0N game
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "completed" boolean NOT NULL DEFAULT FALSE,
  "game_id" integer NOT NULL,-- link to game table
  "mission_id" integer NOT NULL,-- link to mission table
  "player_id" integer NOT NULL,-- link to player table : attempted_mission 11:0N player
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "color" ( -- colors belong to all games
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "deck" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "game_id" integer NOT NULL, -- link to game table : deck 11:0N game
  "type_id" integer NOT NULL, -- link to type table : deck 11:0N type
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "card" ( -- each card line belongs to a single game through a deck
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "deck_id" integer NOT NULL, -- link to deck table : card 11:0N deck
  "color_id" integer NOT NULL, -- link to color table : card 11:0N color
  "position" integer NOT NULL DEFAULT 0, -- if type "hidden" or "visible"
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "city" ( -- cities belong to all games
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "game" ( -- one line per game
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "over" boolean NOT NULL DEFAULT FALSE,
  "user_id" integer NOT NULL, -- link to user table : game 11:0N user
  "turn" integer NOT NULL DEFAULT 0,
  "player_id" integer,-- link to player table : CURRENT TURN, game 01:01 player
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "mission" ( -- missions belong to all games
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "main_mission" boolean NOT NULL DEFAULT FALSE,
  "points" integer NOT NULL,
  "city_id" integer NOT NULL, -- link to city table : mission 11:0N city
  "city_id_1" integer NOT NULL, -- link to city table : mission 11:0N city
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "player" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "color_id" integer NOT NULL, -- link to color table : player 11:0N color
  "available_trains" integer NOT NULL DEFAULT 0,
  "available_stations" integer NOT NULL DEFAULT 0,
  "points" integer NOT NULL DEFAULT 0,
  "visited_countries" integer NOT NULL DEFAULT 0,
  "play_order" integer NOT NULL DEFAULT 0,
  "deck_id" integer NOT NULL, -- link to deck table : deck 01:11 player
  "game_id" integer NOT NULL, -- link to game table : player 11:0N game
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "route" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text,
  "type_id" integer NOT NULL, -- link to type table : route 11:0N type
  "length" integer NOT NULL,
  "color_id" integer NOT NULL, -- link to color table : route 11:0N color
  "city_id" integer NOT NULL, -- link to city table : route 11:0N city
  "city_id_1" integer NOT NULL, -- link to city table : route 11:0N city
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "type" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "email" text NOT NULL,
  "password" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);



ALTER TABLE "game" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- game ISTURN player
ALTER TABLE "deck" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); --  deck ISFROM game
ALTER TABLE "deck" ADD FOREIGN KEY ("type_id") REFERENCES "type" ("id"); --  deck HAS type
ALTER TABLE "card" ADD FOREIGN KEY ("color_id") REFERENCES "color" ("id"); -- card HAS color
ALTER TABLE "card" ADD FOREIGN KEY ("deck_id") REFERENCES "deck" ("id"); -- card ISIN deck
ALTER TABLE "game" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id"); -- game ISHOSTED user
ALTER TABLE "mission" ADD FOREIGN KEY ("city_id") REFERENCES "city" ("id"); -- mission STARTS city
ALTER TABLE "mission" ADD FOREIGN KEY ("city_id_1") REFERENCES "city" ("id"); -- mission ENDS city
ALTER TABLE "player" ADD FOREIGN KEY ("color_id") REFERENCES "color" ("id"); -- player HAS color
ALTER TABLE "player" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- player PLAYS game
ALTER TABLE "player" ADD FOREIGN KEY ("deck_id") REFERENCES "deck" ("id"); -- player HOLDS deck
ALTER TABLE "route" ADD FOREIGN KEY ("type_id") REFERENCES "type" ("id"); -- route HAS type
ALTER TABLE "route" ADD FOREIGN KEY ("color_id") REFERENCES "color" ("id"); -- route HAS color
ALTER TABLE "route" ADD FOREIGN KEY ("city_id") REFERENCES "city" ("id"); -- route STARTS city
ALTER TABLE "route" ADD FOREIGN KEY ("city_id_1") REFERENCES "city" ("id"); -- route ENDS city
ALTER TABLE "claimed_city" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES city
ALTER TABLE "claimed_city" ADD FOREIGN KEY ("city_id") REFERENCES "city" ("id"); -- game SAVES city
ALTER TABLE "claimed_city" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player OWNS city
ALTER TABLE "claimed_mission" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES mission
ALTER TABLE "claimed_mission" ADD FOREIGN KEY ("mission_id") REFERENCES "mission" ("id"); -- game SAVES mission
ALTER TABLE "claimed_mission" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player TRIES mission
ALTER TABLE "claimed_route" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES route
ALTER TABLE "claimed_route" ADD FOREIGN KEY ("route_id") REFERENCES "route" ("id"); -- game SAVES route
ALTER TABLE "claimed_route" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player OWNS route

-- Pour mettre fin à au bloc de transaction et l'exécuter
COMMIT;

