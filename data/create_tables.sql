-- CREATE DATABASE "aventurier";

BEGIN;
-- Creates a transaction group of SQL commands, if any fails, whole transaction is invalidated

DROP TABLE IF EXISTS "city",
"colour",
"deck",
"game",
"mission",
"player",
"route",
"type",
"user";

CREATE TABLE IF NOT EXISTS "city" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- primary key is automatically NOT NULL
  "name" text NOT NULL,
  "game_id" integer NOT NULL, -- link to game table : SAVES, 11 city, 0N game
  "player_id" integer, -- link to player table : OWNS, 01 city, 0N player
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "colour" (
 "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "deck" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "blue" integer NOT NULL,
  "red" integer NOT NULL,
  "green" integer NOT NULL,
  "yellow" integer NOT NULL,
  "black" integer NOT NULL,
  "orange" integer NOT NULL,
  "white" integer NOT NULL,
  "pink" integer NOT NULL,
  "engine" integer NOT NULL,
  "game_id" integer NOT NULL, -- link to game table : SAVES, 11 deck, 0N game
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "game" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "user_id" integer NOT NULL, -- link to user table : HOSTS, 11 game, 0N user
  "deck_hidden" text, -- when saved hidden_deck is stored as string
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "mission" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text,
  "points" integer NOT NULL,
  "type_id" integer NOT NULL, -- link to type table : IDENTIFIES, 11 mission, 0N type
  "player_id" integer, -- link to player table : TRIES, 01 mission, 0N player
  "player_id_1" integer, -- link to player table : COMPLETES, 01 mission, 0N player
  "city_id" integer NOT NULL, -- link to city table : STARTS, 11 mission, 0N city
  "city_id_1" integer NOT NULL, -- link to city table : ENDS, 11 mission, 0N city
  "game_id" integer NOT NULL, -- link to game table : SAVES, 11 mission, 0N game
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "player" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "colour_id" integer NOT NULL, -- link to colour table : COLOURS, 11 player, 0N colour
  "available_trains" integer NOT NULL,
  "available_stations" integer NOT NULL,
  "points" integer NOT NULL,
  "visited_countries" integer NOT NULL,
  "deck_id" integer, -- link to deck table : HOLDS, 01 deck, 11 player
  "game_id" integer NOT NULL, -- link to game table : PLAYS, 11 player, 0N game
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "route" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text,
  "type_id" integer NOT NULL, -- link to type table : IDENTIFIES, 11 route, 0N type
  "length" integer NOT NULL,
  "colour_id" integer NOT NULL, -- link to colour table : COLOURS, 11 route, 0N colour
  "city_id" integer NOT NULL, -- link to city table : STARTS, 11 route, 0N city
  "city_id_1" integer NOT NULL, -- link to city table : ENDS, 11 route, 0N city
  "player_id" integer, -- link to player table : OWNS, 01 route, 0N player
  "game_id" integer NOT NULL, -- link to game table : SAVES, 11 route, 0N game
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "type" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE IF NOT EXISTS "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "email" text NOT NULL,
  "password" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

ALTER TABLE "game" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id"); -- user HOSTS game
ALTER TABLE "city" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player OWNS city
ALTER TABLE "city" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES city
ALTER TABLE "mission" ADD FOREIGN KEY ("city_id_1") REFERENCES "city" ("id"); -- mission STARTS city
ALTER TABLE "mission" ADD FOREIGN KEY ("city_id") REFERENCES "city" ("id"); -- mission ENDS city
ALTER TABLE "mission" ADD FOREIGN KEY ("player_id_1") REFERENCES "player" ("id"); -- player TRIES mission
ALTER TABLE "mission" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player COMPLETES mission
ALTER TABLE "mission" ADD FOREIGN KEY ("type_id") REFERENCES "type" ("id"); -- type IDENTIFIES mission 
ALTER TABLE "mission" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES mission
ALTER TABLE "player" ADD FOREIGN KEY ("colour_id") REFERENCES "colour" ("id"); -- player COLOURS
ALTER TABLE "player" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- player PLAYS game
ALTER TABLE "player" ADD FOREIGN KEY ("deck_id") REFERENCES "deck" ("id"); -- player HOLDS deck
ALTER TABLE "route" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES route
ALTER TABLE "route" ADD FOREIGN KEY ("type_id") REFERENCES "type" ("id"); -- type IDENTIFIES route
ALTER TABLE "route" ADD FOREIGN KEY ("colour_id") REFERENCES "colour" ("id"); -- route COLOURS
ALTER TABLE "route" ADD FOREIGN KEY ("city_id_1") REFERENCES "city" ("id"); -- route STARTS city
ALTER TABLE "route" ADD FOREIGN KEY ("city_id") REFERENCES "city" ("id"); -- route ENDS city
ALTER TABLE "route" ADD FOREIGN KEY ("player_id") REFERENCES "player" ("id"); -- player OWNS route
ALTER TABLE "deck" ADD FOREIGN KEY ("game_id") REFERENCES "game" ("id"); -- game SAVES deck

-- Pour mettre fin à au bloc de transaction et l'exécuter
COMMIT;